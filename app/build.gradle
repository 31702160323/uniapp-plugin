import java.util.regex.Pattern

apply plugin: 'com.android.application'

android {
    compileSdkVersion 32
//    buildToolsVersion '28.0.3'
    defaultConfig {
        applicationId "com.xzh.UniPlugin"
        minSdkVersion 21
        targetSdkVersion 32 //建议此属性值设为21 io.dcloud.PandoraEntry 作为apk入口时   必须设置 targetSDKVersion>=21 沉浸式才生效

        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        ndk {
//            abiFilters 'x86','armeabi-v7a'
//            abiFilters 'arm64-v8a'
            abiFilters 'armeabi-v7a'
        }
        resConfigs("zh-rCN")
        compileOptions {
            sourceCompatibility JavaVersion.VERSION_1_8
            targetCompatibility JavaVersion.VERSION_1_8
        }
    }

    signingConfigs {
        config {
            keyAlias 'uniplugin'
            keyPassword '185007'
            storeFile file('uniplugin.keystore')
            storePassword '185007'
            v1SigningEnabled true
            v2SigningEnabled true
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.config
            shrinkResources true
            zipAlignEnabled true
            minifyEnabled true
            multiDexEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            aaptOptions {
                ignoreAssetsPattern '!uni-jsframework.js:!uni-jsframework-vue3.js:'
            }
            manifestPlaceholders = [
                    DCLOUD_APPKEY: "e9269f31a55e5d46e77a3e5e4ad97b88",
            ]
        }
        debug {
            signingConfig signingConfigs.config
            shrinkResources false
            zipAlignEnabled false
            minifyEnabled false
            debuggable true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            aaptOptions {
                ignoreAssetsPattern '!uni-jsframework-dev.js:!uni-jsframework-vue3-dev.js:'
            }
            manifestPlaceholders = [
                    DCLOUD_APPKEY: "e9269f31a55e5d46e77a3e5e4ad97b88",
            ]
        }
    }
    //使用uniapp时，需复制下面代码
    /*代码开始*/
    aaptOptions {
        additionalParameters '--auto-add-overlay'
        //noCompress 'foo', 'bar'
        ignoreAssetsPattern "!.svn:!.git:.*:!CVS:!thumbs.db:!picasa.ini:!*.scc:*~"
    }
    /*代码结束*/
}
repositories {
    flatDir {
        dirs 'libs'
    }
}
dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation fileTree(dir: 'libs', include: ['*.aar'])

    debugImplementation fileTree(dir: 'libs', include: ['debug-server-release.aar'])

    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.appcompat:appcompat:1.0.0'

    /*uniapp所需库-----------------------开始*/
    implementation 'androidx.recyclerview:recyclerview:1.0.0'
    implementation 'com.facebook.fresco:fresco:1.13.0'
    implementation "com.facebook.fresco:animated-gif:1.13.0"
    /*uniapp所需库-----------------------结束*/
    // 基座需要，必须添加
    implementation 'com.github.bumptech.glide:glide:4.9.0'
    implementation 'com.alibaba:fastjson:1.1.46.android'

    // 添加uni-app插件
    implementation project(':musicNotification')
    implementation project(':widget')
//    implementation project(':calendar')
}

android.applicationVariants.all { variant ->
    variant.outputs.all { output ->
        output.processManifestProvider.get().doFirst {
            def dcloudControlFile = "${projectDir}/src/main/assets/data/dcloud_control.xml"
            def updatedDcloudControl = new File(dcloudControlFile).getText('UTF-8').replaceAll("BUILD_TYPES", "${variant.versionName == "debug"}")
            def appid = updatedDcloudControl.find(Pattern.compile("appid=\"(\\w)*\"")).replaceAll("appid=", "").replaceAll("\"", "").trim()
            def manifest = new File("${projectDir}/src/main/assets/apps/${appid}/www/manifest.json").getText('UTF-8')
            def vueVersion = manifest.find(Pattern.compile("vueVersion\"(\\s)*:(\\s)*\"(\\w)*\"(\\s)*"))
            if (vueVersion == null) {
                vueVersion = "2"
            } else {
                vueVersion = vueVersion.replaceAll("vueVersion", "").replaceAll(":", "").replaceAll("\"", "").trim()
            }

            new File(dcloudControlFile).write(updatedDcloudControl, 'UTF-8')

            if (variant.versionName == "release") {
                variant.mergeAssets.doLast {
                    //删除assets文件夹下的所有zip文件，或者指定文件。(删除文件夹：文件夹名/**/*)
                    def includes = ['uni-jsframework-dev.js', 'uni-jsframework-vue3-dev.js']

                    if (vueVersion == "3") {
                        includes.add('uni-jsframework.js')
                    } else {
                        includes.add('uni-jsframework-vue3.js')
                    }

                    delete(fileTree(dir: variant.mergeAssets.outputDir, includes: includes))
                }
            }
        }
    }
}